[{"C:\\Users\\newuser\\Projects\\ravenous\\src\\index.js":"1","C:\\Users\\newuser\\Projects\\ravenous\\src\\reportWebVitals.js":"2","C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\App\\App.js":"3","C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\SearchBar\\SearchBar.js":"4","C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\BusinessList\\BusinessList.js":"5","C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\Business\\Business.js":"6","C:\\Users\\newuser\\Projects\\Ravenous\\src\\index.js":"7","C:\\Users\\newuser\\Projects\\Ravenous\\src\\reportWebVitals.js":"8","C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\App\\App.js":"9","C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\SearchBar\\SearchBar.js":"10","C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\BusinessList\\BusinessList.js":"11","C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\Business\\Business.js":"12","C:\\Users\\newuser\\Projects\\Ravenous\\src\\util\\Yelp.js":"13"},{"size":516,"mtime":1609783285707,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":753,"mtime":1610003343676,"results":"17","hashOfConfig":"15"},{"size":1212,"mtime":1609806878712,"results":"18","hashOfConfig":"15"},{"size":528,"mtime":1610003871265,"results":"19","hashOfConfig":"15"},{"size":1254,"mtime":1610008300318,"results":"20","hashOfConfig":"15"},{"size":516,"mtime":1609783285707,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":767,"mtime":1610141172459,"results":"24","hashOfConfig":"22"},{"size":2731,"mtime":1610092985589,"results":"25","hashOfConfig":"22"},{"size":548,"mtime":1610101737340,"results":"26","hashOfConfig":"22"},{"size":1165,"mtime":1610253551109,"results":"27","hashOfConfig":"22"},{"size":1355,"mtime":1610146171244,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"wuor08",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1c00k2s",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\newuser\\Projects\\ravenous\\src\\index.js",[],["59","60"],"C:\\Users\\newuser\\Projects\\ravenous\\src\\reportWebVitals.js",[],"C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\App\\App.js",[],"C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\SearchBar\\SearchBar.js",["61"],"import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\nconst sortByOptions = {\r\n   'Best Match': 'best_match',\r\n   'Highest Rated': 'rating',\r\n   'Most Reviewed': 'review_count' \r\n}\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n// dynamically creates the list items neededto display the sort options against the potential changes to the API  \r\n    renderSortByOptions() { \r\n    return Object.keys(sortByOptions).map(sortByOption => {\r\n        let sortByOptionValue = sortByOptions[sortByOption];\r\n        return <li key={sortByOptionValue}>{sortByOption}</li>  \r\n    });\r\n  }    \r\n  render() {\r\n      return (\r\n        <div className=\"SearchBar\">\r\n             <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                     {this.renderSortByOptions()}\r\n                </ul>\r\n             </div>\r\n                <div className=\"SearchBar-fields\">\r\n                     <input placeholder=\"Search Businesses\" />\r\n                     <input placeholder=\"Where?\" />\r\n                </div>\r\n                     <div className=\"SearchBar-submit\">\r\n                         <a>Let's Go</a>\r\n                     </div>\r\n        </div>\r\n      )\r\n  }     \r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\BusinessList\\BusinessList.js",[],"C:\\Users\\newuser\\Projects\\ravenous\\src\\components\\Business\\Business.js",["62"],"C:\\Users\\newuser\\Projects\\Ravenous\\src\\index.js",[],["63","64"],"C:\\Users\\newuser\\Projects\\Ravenous\\src\\reportWebVitals.js",[],"C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\App\\App.js",[],"C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\SearchBar\\SearchBar.js",["65"],"import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\n\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        term: '',\r\n        location: '',\r\n        sortBy: 'best_match',\r\n      }\r\n    // in the event of things not working this could cause me issues\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n\r\n    this.sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Highest Rated': 'rating',\r\n        'Most Reviewed': 'review_count' \r\n     }  \r\n  }\r\n\r\n    // reeturns the current CSS class for a sorting option, provides user visual feedback\r\n    getSortByClass(sortByOption){\r\n       if (sortByOption === this.state.sortBy){\r\n         return 'active';\r\n       } else {\r\n         return '';\r\n       }\r\n    }\r\n\r\n   //sets the state of the sorting option\r\n\r\n   handleSortByChange(sortByOption) {\r\n     this.setState({\r\n       sortBy: sortByOption\r\n     });\r\n   }\r\n\r\n   handleTermChange(event) {\r\n    this.setState({\r\n      term: event.target.value\r\n    })\r\n   }\r\n\r\n   handleLocationChange(event) {\r\n    this.setState({\r\n       location: event.target.value\r\n    })\r\n   }\r\n\r\n   handleSearch(event) {\r\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n    event.preventDefault();\r\n   }\r\n\r\n  // dynamically creates the list items neededto display the sort options against the potential changes to the API  \r\n    renderSortByOptions() { \r\n       return Object.keys(this.sortByOptions).map(sortByOption => {\r\n         let sortByOptionValue = this.sortByOptions[sortByOption];\r\n         return (\r\n            <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick= {this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n          \r\n            {sortByOption}\r\n          \r\n           </li>)  \r\n       });\r\n      }  \r\n\r\n  render() {\r\n      return (\r\n        <div className=\"SearchBar\">\r\n             <div className=\"SearchBar-sort-options\">\r\n                <ul>\r\n                     {this.renderSortByOptions()}\r\n                </ul>\r\n             </div>\r\n                <div className=\"SearchBar-fields\">\r\n                     <input placeholder=\"Search Businesses\"  onChange={this.handleTermChange}/>\r\n                     <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n                </div>\r\n                     <div className=\"SearchBar-submit\">\r\n                         <a onClick={this.handleSearch} >Let's Go</a>\r\n                     </div>\r\n        </div>\r\n      )\r\n  }     \r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\BusinessList\\BusinessList.js",[],"C:\\Users\\newuser\\Projects\\Ravenous\\src\\components\\Business\\Business.js",[],"C:\\Users\\newuser\\Projects\\Ravenous\\src\\util\\Yelp.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":33,"column":26,"nodeType":"72","endLine":33,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":10,"column":15,"nodeType":"75","messageId":"76","endLine":10,"endColumn":23},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"70","severity":1,"message":"71","line":88,"column":26,"nodeType":"72","endLine":88,"endColumn":58},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'business' is assigned a value but never used.","Identifier","unusedVar",["79"],["80"],"no-global-assign","no-unsafe-negation"]